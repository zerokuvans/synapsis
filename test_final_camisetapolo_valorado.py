#!/usr/bin/env python3
"""
Test final para confirmar que el problema de "camiseta polo VALORADO" est√° resuelto.
Este test simula exactamente el escenario del error original.
"""

import requests
import json

def test_escenario_original():
    """
    Simula el escenario exacto que causaba el error original:
    - Solicitar 1 camiseta polo VALORADO
    - Con campos de talla vac√≠os para otros elementos
    """
    
    print("=" * 60)
    print("üîç TEST FINAL: Escenario del error original")
    print("=" * 60)
    
    # URL del endpoint
    url = "http://localhost:8080/api/cambios_dotacion"
    
    # Datos que simulan exactamente el formulario del frontend
    datos_formulario = {
        "id_codigo_consumidor": 12345,
        "fecha_cambio": "2024-01-20",
        
        # El elemento que causaba el problema
        "camisetapolo": 1,
        "camiseta_polo_talla": "M",
        "camisetapolo_valorado": True,
        
        # Otros elementos con valores por defecto (campos vac√≠os)
        "pantalon": 0,
        "pantalon_talla": "",  # Campo vac√≠o que causaba el error
        "pantalon_valorado": False,
        
        "camisetagris": 0,
        "camiseta_gris_talla": "",
        "camisetagris_valorado": False,
        
        "guerrera": 0,
        "guerrera_talla": "",  # Campo vac√≠o que causaba el error
        "guerrera_valorado": False,
        
        "guantes_nitrilo": 0,
        "guantes_nitrilo_valorado": False,
        
        "guantes_carnaza": 0,
        "guantes_carnaza_valorado": False,
        
        "gafas": 0,
        "gafas_valorado": False,
        
        "gorra": 0,
        "gorra_valorado": False,
        
        "casco": 0,
        "casco_valorado": False,
        
        "botas": 0,
        "botas_talla": "",  # Campo vac√≠o que causaba el error
        "botas_valorado": False,
        
        "observaciones": "Test final - escenario original"
    }
    
    print("üì§ DATOS ENVIADOS (simulando formulario frontend):")
    print(json.dumps(datos_formulario, indent=2, ensure_ascii=False))
    print()
    
    try:
        # Realizar la petici√≥n
        response = requests.post(url, json=datos_formulario)
        
        print("üì• RESPUESTA:")
        print(f"   Status Code: {response.status_code}")
        print(f"   Headers: {dict(response.headers)}")
        
        if response.headers.get('content-type', '').startswith('application/json'):
            response_json = response.json()
            print("   JSON Response:")
            print(json.dumps(response_json, indent=4, ensure_ascii=False))
        else:
            print("   Text Response:")
            print(response.text)
        
        print()
        
        # Verificar el resultado
        if response.status_code == 201:
            print("‚úÖ ¬°√âXITO! El problema original ha sido resuelto")
            print("   - La camiseta polo VALORADO se proces√≥ correctamente")
            print("   - Los campos vac√≠os se manejaron sin errores")
            print("   - El endpoint respondi√≥ con c√≥digo 201 (Created)")
            return True
        else:
            print("‚ùå ERROR: El problema persiste")
            print(f"   - C√≥digo de estado: {response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå ERROR: No se pudo conectar al servidor")
        print("   - Aseg√∫rate de que el servidor est√© ejecut√°ndose en http://localhost:8080")
        return False
    except Exception as e:
        print(f"‚ùå ERROR INESPERADO: {e}")
        return False

def verificar_stock_actual():
    """
    Verifica el stock actual de camisetapolo para contexto
    """
    print("\n" + "=" * 60)
    print("üìä VERIFICACI√ìN DE STOCK ACTUAL")
    print("=" * 60)
    
    try:
        import mysql.connector
        
        connection = mysql.connector.connect(
            host='localhost',
            user='root',
            password='732137A031E4b@',
            database='capired'
        )
        
        cursor = connection.cursor()
        
        # Stock en ingresos
        cursor.execute("""
            SELECT COUNT(*) as total_valorado 
            FROM ingresos_dotaciones 
            WHERE tipo_elemento = 'camisetapolo' AND estado = 'VALORADO'
        """)
        stock_valorado = cursor.fetchone()[0]
        
        # Stock usado en cambios
        cursor.execute("""
            SELECT COALESCE(SUM(camisetapolo), 0) as total_usado
            FROM cambios_dotacion 
            WHERE estado_camiseta_polo = 'VALORADO'
        """)
        stock_usado = cursor.fetchone()[0]
        
        stock_disponible = stock_valorado - stock_usado
        
        print(f"üì¶ Stock de camisetapolo VALORADO:")
        print(f"   - Total en ingresos: {stock_valorado}")
        print(f"   - Total usado: {stock_usado}")
        print(f"   - Disponible: {stock_disponible}")
        
        cursor.close()
        connection.close()
        
    except Exception as e:
        print(f"‚ùå Error al verificar stock: {e}")

if __name__ == "__main__":
    print("üß™ PRUEBA FINAL: Resoluci√≥n del problema 'camiseta polo VALORADO'")
    print("Este test confirma que el error original ha sido corregido.\n")
    
    # Verificar stock actual
    verificar_stock_actual()
    
    # Ejecutar test principal
    exito = test_escenario_original()
    
    print("\n" + "=" * 60)
    print("üìã RESUMEN FINAL")
    print("=" * 60)
    
    if exito:
        print("‚úÖ PROBLEMA RESUELTO EXITOSAMENTE")
        print("   El error 'Incorrect integer value: '' for column 'pantalon_talla'' ha sido corregido.")
        print("   El endpoint ahora maneja correctamente los campos vac√≠os.")
        print("   Las camisetas polo VALORADO se pueden procesar sin problemas.")
    else:
        print("‚ùå EL PROBLEMA PERSISTE")
        print("   Se requiere investigaci√≥n adicional.")
    
    print("\nüîß SOLUCI√ìN IMPLEMENTADA:")
    print("   - Se agreg√≥ una funci√≥n 'procesar_talla()' que convierte strings vac√≠os a None")
    print("   - Esto permite que la base de datos maneje correctamente los campos NULL")
    print("   - Se aplic√≥ a todos los campos de talla en el endpoint de cambios de dotaci√≥n")