import mysql.connector
import bcrypt

# Configuraci√≥n de la base de datos
db_config = {
    'host': 'localhost',
    'user': 'root',
    'password': '732137A031E4b@',
    'database': 'capired'
}

def test_passwords():
    """Probar diferentes contrase√±as para el usuario 80833959"""
    try:
        connection = mysql.connector.connect(**db_config)
        cursor = connection.cursor(dictionary=True)
        
        # Obtener el hash de la contrase√±a del usuario
        cursor.execute("""
            SELECT recurso_operativo_cedula, nombre, recurso_operativo_password 
            FROM recurso_operativo 
            WHERE recurso_operativo_cedula = '80833959'
        """)
        
        user = cursor.fetchone()
        if not user:
            print("‚ùå Usuario no encontrado")
            return
        
        print(f"‚úÖ Usuario encontrado: {user['nombre']}")
        print(f"üìã C√©dula: {user['recurso_operativo_cedula']}")
        
        stored_password = user['recurso_operativo_password']
        if isinstance(stored_password, str):
            stored_password = stored_password.encode('utf-8')
        
        print(f"üîë Hash almacenado: {stored_password[:50]}...")
        
        # Lista de contrase√±as a probar
        passwords_to_test = [
            '80833959',           # La c√©dula
            '123456',             # Contrase√±a com√∫n
            'admin',              # Admin
            'password',           # Password
            'test123',            # Test
            'CE80833959',         # CE + c√©dula
            'M4r14l4r@',          # Contrase√±a vista en otros scripts
            '732137A031E4b@',     # Contrase√±a de la DB
            'victor',             # Nombre
            'naranjo',            # Apellido
            'VICTOR',             # Nombre en may√∫sculas
            'capired',            # Nombre del sistema
            'synapsis',           # Nombre del proyecto
        ]
        
        print(f"\nüîç Probando {len(passwords_to_test)} contrase√±as...")
        
        for i, password in enumerate(passwords_to_test, 1):
            try:
                password_bytes = password.encode('utf-8')
                if bcrypt.checkpw(password_bytes, stored_password):
                    print(f"‚úÖ ¬°CONTRASE√ëA ENCONTRADA! #{i}: '{password}'")
                    return password
                else:
                    print(f"‚ùå #{i}: '{password}' - No coincide")
            except Exception as e:
                print(f"‚ö†Ô∏è #{i}: '{password}' - Error: {e}")
        
        print("\n‚ùå Ninguna contrase√±a funcion√≥")
        return None
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return None
    finally:
        if 'connection' in locals():
            connection.close()

if __name__ == "__main__":
    password = test_passwords()
    if password:
        print(f"\nüéâ Contrase√±a v√°lida encontrada: '{password}'")
    else:
        print("\nüòû No se encontr√≥ una contrase√±a v√°lida")